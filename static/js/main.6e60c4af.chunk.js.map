{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","getComment","commentsFromServer","filter","postId","postsFromServer","userId","usersFromServer","find","PostList","posts","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAErB,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QChBIG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCJrCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,8BACG,eAED,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACGS,EAAKV,YCHCW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAX,EAGEU,EAHFV,KACAQ,EAEEE,EAFFF,KACAJ,EACEM,EADFN,SAGF,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGFH,GACC,cAAC,EAAD,CAAUA,KAAMA,OAIpB,mBAAGP,UAAU,iBAAb,SACGD,IAGH,uBAEuB,IAApBI,EAASQ,OACP,cAAC,EAAD,CAAaR,SAAUA,IACvB,mBAAG,UAAQ,oBAAX,kCCtBX,SAASS,EAAWH,GAClB,OAAOI,EAAmBC,QAAO,SAAAlB,GAAO,OACtCA,EAAQmB,SAAWN,EAAKJ,MAIJW,EAAgBZ,KAAI,SAAAK,GAAI,kCAC3CA,GAD2C,IAE9CF,MAbmBU,EAaDR,EAAKQ,OAZhBC,EAAgBC,MAAK,SAAAZ,GAAI,OAAIA,EAAKF,KAAOY,MACzC,MAYPd,SAAUS,EAAWH,KAdvB,IAAqBQ,KAWd,IAMMG,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKrB,UAAU,WAAf,SACGqB,EAAMjB,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCbtC,SAASO,EAAWH,GAClB,OAAOI,EAAmBC,QAAO,SAAAlB,GAAO,OACtCA,EAAQmB,SAAWN,EAAKJ,MAIrB,IAAMgB,EAAQL,EAAgBZ,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAbmBU,EAaDR,EAAKQ,OAZhBC,EAAgBC,MAAK,SAAAZ,GAAI,OAAIA,EAAKF,KAAOY,MACzC,MAYPd,SAAUS,EAAWH,KAdvB,IAAqBQ,KAiBRK,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUqB,MAAOA,QCxBrBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6e60c4af.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </p>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    body,\n    user,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        {user && (\n          <UserInfo user={user} />\n        )}\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      {!(comments.length === 0)\n        ? (<CommentList comments={comments} />)\n        : (<b data-cy=\"NoCommentsMessage\">No comments yet</b>)\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\nimport postsFromServer from '../../api/posts.json';\nimport usersFromServer from '../../api/users.json';\nimport commentsFromServer from '../../api/comments.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getComment(post) {\n  return commentsFromServer.filter(comment => (\n    comment.postId === post.id\n  ));\n}\n\nexport const possadts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getComment(post),\n}));\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getComment(post) {\n  return commentsFromServer.filter(comment => (\n    comment.postId === post.id\n  ));\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getComment(post),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}